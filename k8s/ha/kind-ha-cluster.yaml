kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
networking:
  apiServerAddress: "127.0.0.1"
  apiServerPort: 6444
  podSubnet: "10.244.0.0/16"
  serviceSubnet: "10.96.0.0/12"
nodes:
  - role: control-plane
    labels:
      topology: control-plane-1
    kubeadmConfigPatches:
      - |
        kind: ClusterConfiguration
        apiServer: 
          certSANs:
            - "localhost"
            - "127.0.0.1"
            - "kind-control-plane"
          extraArgs:
            enable-admission-plugins: "NodeRestriction,PodSecurity"
      - |
        kind: InitConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "topology=control-plane-1"
    extraMounts:
      - hostPath: ../../data/control-plane-1
        containerPath: /data
    # Add port mappings for ArgoCD and other services
    extraPortMappings:
      - containerPort: 30080  # ArgoCD HTTP
        hostPort: 30080
        protocol: TCP
      - containerPort: 30443  # ArgoCD HTTPS/gRPC
        hostPort: 30443
        protocol: TCP
      - containerPort: 30090  # Alternative port
        hostPort: 30090
        protocol: TCP
        
  - role: control-plane
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "topology=control-plane-2"
    labels:
      topology: control-plane-2
    extraMounts:
      - hostPath: ../../data/control-plane-2
        containerPath: /data
        
  - role: control-plane
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "topology=control-plane-3"
    labels:
      topology: control-plane-3
    extraMounts:
      - hostPath: ../../data/control-plane-3
        containerPath: /data
        
  # Worker 1 - ML Training Workloads
  - role: worker
    labels:
      workload-type: ml-training
      node-tier: compute-intensive
    extraMounts:
      - hostPath: ../../data/ml-training
        containerPath: /data/training
      - hostPath: ../../models
        containerPath: /models
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "workload-type=ml-training,node-tier=compute-intensive"
            
  # Worker 2 - API Services
  - role: worker
    labels:
      workload-type: api-services
      node-tier: web-tier
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "workload-type=api-services,node-tier=web-tier"
            
  - role: worker
    labels:
      workload-type: data-processing
      node-tier: stateful
    extraMounts:
      - hostPath: ../../data/mongodb
        containerPath: /data/db
      - hostPath: ../../data/redis
        containerPath: /data/redis
    kubeadmConfigPatches:
      - |
        kind: JoinConfiguration
        nodeRegistration:
          kubeletExtraArgs:
            node-labels: "workload-type=data-processing,node-tier=stateful"